1- almost done with GoalAdapter, TaskAdapter and RecyclerViewAdapter.
2- i make a lot of Renaming on layouts and java.
3- i add package called data that have all our database things.
4- remove GoalClass.
5- the adapter for GoalAdapter is to currentGoal, RecyclerViewAdapter is to achieve and missed Goal.
6- remove CurrentAdapter.
----------------------------------------------------------------

============
 some ref: |
============


on display screen:
------------------------------------
on current:current_goals_item)
- current_goal_image ( type)
- current_goal_tv ( goal name)
- current_goal_pers_tv ( precentage)

-------------------------------------
on achive, missed:( card_view_item)
- cardview ( container)
- goal_img ( type)
- goal_textview ( goal name)

-------------------------------------
on task item: (task_list_item)
- checkbox ( completed)
- imageView ( notify on item)
- textViewTitle ( task name)
- textViewShortDesc ( date)

======================================
Editting activity:

--------------------------------------
goal:( activity_goal)
- goal ( goal name)
- radiogroup ( radiogroup)
- radiobutton ( job type)
- radiobutton1 ( housework type)
- radiobutton2 ( education type)
- radiobutton3 ( exercise type)
- radiobutton4 ( social type)
- radiobutton5 ( other type)
- description ( description goal)
- delete_goal ( delete goal button)
- save_goal ( save goal button)

------------------------------------
task:( activity_task)
- edit_tasks ( task name)
- edit_date ( task date )
- edit_notify ( task notify on)
- Spinner ( task Spinner)
- delete_task ( delete task button)
- save_task ( save task button)
- cancel_task ( cancel task button)


=============================================
 some deleted code from RecyclerViewAdapter:|
=============================================


public class RecyclerViewAdapter extends RecyclerView.Adapter<RecyclerViewAdapter.MyViewHolder>{

/**
 * we add a constructor to the RecyclerViewAdapter so that it has a handle to the data that the RecyclerView displays.
 * As our data is in the form of a List of Goal objects
     */

    private Context mContex ;
    private List<GoalClass> mData;


    public RecyclerViewAdapter(Context mContex,     List<GoalClass> mData) {
        this.mContex = mContex;
        this.mData = mData;
    }
/*
 This method is called when the custom ViewHolder needs to be initialized.
 We specify the layout that each item of the RecyclerView should use.
  This is done by inflating the layout using LayoutInflater,
  passing the output to the constructor of the custom ViewHolder.
 */
    public MyViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {

        View view;
        LayoutInflater mInflater =LayoutInflater.from(mContex);
        view = mInflater.inflate(R.layout.card_view_item, parent,false);
        return new MyViewHolder(view);
    }
/*
  here's where we have to set the values of the name of the goal and photo fields of the CardView.
 */
    @Override
    public void onBindViewHolder(MyViewHolder holder, int position) {
        holder.tv_goal_title.setText(mData.get(position).getTitle());
        holder.img_goal_thumbnail.setImageResource(mData.get(position).getThumbnail());

        //set click listener
        holder.cardView.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                Intent intent = new Intent(mContex,DisplayTaskScreen.class);

                // start the activity
                mContex.startActivity(intent);

            }
        });
    }
/*
*This should return the number of items present in the data. As our data is in the form of a List,
* we only need to call the size method on the List object
 */
    @Override
    public int getItemCount() {

        return mData.size();
    }

   /**
     * we already defined the XML layout for a CardView that represents a person. We are going to reuse that layout now.
    * Inside the constructor of our custom ViewHolder, initialize the views that belong to the items of our RecyclerVie.
     */
    public static class MyViewHolder extends RecyclerView.ViewHolder {

        TextView tv_goal_title;
        ImageView img_goal_thumbnail;
        CardView cardView;

        public MyViewHolder(View itemView) {
            super(itemView);
            tv_goal_title = (TextView)itemView.findViewById(R.id.goal_textview);
            img_goal_thumbnail=(ImageView)itemView.findViewById(R.id.goal_img);
            cardView =(CardView) itemView.findViewById(R.id.cardview);

        }
    }
}
================================
the deleted code from GoalClass|
================================
package com.example.al_kahtani.sygoal;

public class GoalClass {
    /**
     * Default title name of the goal
     */
    private String Title;
    /**
     * Default photo of the goal
     */
    private int Thumbnail;

    private String mCurrent_goal_name;
    private String mRate;
    private static final int NO_IMAGE_PROVIDED = -1;

    /**
     * Create a new goal object.
     *
     * @param Current_goal_name
     * @param Rate
     */
    public GoalClass(String Current_goal_name, String Rate) {
        mCurrent_goal_name = Current_goal_name;
        mRate = Rate;
    }

    /**
     * @param title     is a name of goal
     * @param thumbnail is a photo of goal
     */
    public GoalClass(String title, int thumbnail) {
        Title = title;
        Thumbnail = thumbnail;
    }

    /*
     * Get the Default title name of the goal.
     */
    public String getTitle() {
        return Title;
    }

    /*
     * Get the Default photo of the goal.
     */
    public int getThumbnail() {
        return Thumbnail;
    }

    /*
     * Set the Default title name of the goal.
     */
    public void setTitle(String title) {
        Title = title;
    }

    /*
     * Set the Default photo of the goal.
     */
    public void setThumbnail(int thumbnail) {
        Thumbnail = thumbnail;
    }

    public String getRate() {
        return mRate;
    }

    public void setRate(String rate) {
        mRate = rate;
    }


    private int mImageResourceId = NO_IMAGE_PROVIDED;

    public String getCurrent_goal_name() {
        return mCurrent_goal_name;
    }

    public void setCurrent_goal_name(String current_goal_name) {
        mCurrent_goal_name = current_goal_name;
    }


    public boolean hasImage() {
        return mImageResourceId != NO_IMAGE_PROVIDED;
    }

    public int getImageResourceId() {
        return mImageResourceId;
    }

}

======================================
the deleted code from CurrentAdapter:|
======================================
package com.example.al_kahtani.sygoal;

import android.content.Context;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ArrayAdapter;
import android.widget.ImageView;
import android.widget.TextView;

import java.util.ArrayList;

public class CurrentAdapter extends ArrayAdapter<GoalClass> {


    public CurrentAdapter(Context context, ArrayList<GoalClass> titles) {
        super(context, 0, titles);
    }


    @Override
    public View getView(int position, View convertView, ViewGroup parent){
        View listItemView = convertView;
        if (listItemView == null) {
            listItemView = LayoutInflater.from(getContext()).inflate(
                    R.layout.currrnt_goals_item, parent, false);
        }
        GoalClass currentWord = getItem(position);
        TextView current_goal = listItemView.findViewById(R.id.display_recycle_goal_name);
        current_goal.setText(currentWord.getCurrent_goal_name());
        TextView current_goal_Rate =  listItemView.findViewById(R.id.display_goal_percentage);
        current_goal_Rate.setText(currentWord.getRate());
        ImageView imageView = listItemView.findViewById(R.id.display_recycle_goal_type);

        if (currentWord.hasImage()) {
            imageView.setImageResource(currentWord.getImageResourceId());

            imageView.setVisibility(View.VISIBLE);
        } else {

            imageView.setVisibility(View.GONE);
        }

        return listItemView;
    }

}

-----------------------------
